# Android init cmdline parse

LK传递设置Android property

# 参考文档

* [在linux kernel或android中解析cmdline参数](https://blog.csdn.net/weixin_42135087/article/details/103365655)
* [深入研究源码：Android10.0系统启动流程（二）init进程](https://juejin.im/post/5d8405b7518825485e227eb2)
* [根据cmdline在驱动中加载不同硬件配置](https://blog.csdn.net/qq_24622489/article/details/100080846?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-3)
* https://github.com/Iscle/OrangePi_4G-IOT_Android_8.1_BSP

# 内核cmdline解析

```
* system/core/init/init.cpp
  * int SecondStageMain(int argc, char** argv)
    * process_kernel_cmdline();
      * import_kernel_cmdline(false, import_kernel_nv);
        * import_kernel_nv
          * static void import_kernel_nv(const std::string& key, const std::string& value, bool for_emulator)
            * android::base::StartsWith(key, "androidboot.")
              * property_set("ro.boot." + key.substr(12), value);
              * LOG(INFO) << "import_kernel_nv ro.boot." << key.substr(12) << ":" << value;
        * void import_kernel_cmdline(bool in_qemu, const std::function<void(const std::string&, const std::string&, bool)>& fn) 
          * android::base::ReadFileToString("/proc/cmdline", &cmdline);
          * fn(pieces[0], pieces[1], in_qemu);
```

lk传递给内核的cmdline

`console=tty0 console=ttyS0,921600n1 vmalloc=400M slub_debug=OFZPU page_owner=on swiotlb=noforce androidboot.hardware=mt6765 maxcpus=8 loop.max_part=7 firmware_class.path=/vendor/firmware earlycon=uart8250,mmio32,0x11002000, has_battery_removed=0 android boot.boot_devices=bootdevice,11230000.mmc root=/dev/ram androidboot.vbmeta.device=PARTUUID=a4da8f1b-fe07-433b-95cb-84a5f23e477b androidboot.vbmeta.avb_version=1.1 androidboot.vbmeta.device_state=locked androidboot.veritymode=disabled androidboot.veritymode.managed=yes androidboot.verifiedbootstate=green bootopt=64S3,32N2,64N2 buildvariant=eng androidboot.atm=disabled androidboot.meta_log_disable=0 printk.disable_uart=0 ddebug_query="file *mediatek* +p ; file *gpu* =_" bootprof.pl_t=1127 bootprof.lk_t=3430 bootprof.logo_t=1159 androidboot.serialno=0123456789ABCDEF androidboot.bootreason=PowerKey gpt=1 initcall_debug=1 usb2jtag_mode=0 mrdump_ddrsv=yes mrdump_cb=0x10e800,0x1400 mrdump.lk=MRDUMP08 androidboot.dtb_idx=0 androidboot.dtbo_idx=0`

以`androidboot.hardware=mt6765`为例，adb执行`adb shell getprop ro.boot.hardware`，结果是`mt6762`，哪里又重新设定了`androidboot.hardware=mt6762`

查看启动log信息发现：  

`[   15.442543] .(1)[1:init]init 3: Init cannot set 'ro.boot.hardware' to 'mt6765': Read-only property was already set`

# 获取pin值传递cmdline

* mtk6739_q0_mp1/out/target/product/k62v1_64_bsp/obj/PRELOADER_OBJ/inc/cust_gpio_usage.h
  * #define GPIO_RT9465_PWR_EN_PIN                  (GPIO176 | 0x80000000)
* diff
  ```diff
  diff --git a/vendor/mediatek/proprietary/bootable/bootloader/lk/app/mt_boot/bootargs.c b/vendor/mediatek/proprietary/bootable/bootloader/lk/app/mt_boot/bootargs.c
  index 34e235dab38..8714ce43e37 100644
  --- a/vendor/mediatek/proprietary/bootable/bootloader/lk/app/mt_boot/bootargs.c
  +++ b/vendor/mediatek/proprietary/bootable/bootloader/lk/app/mt_boot/bootargs.c
  @@ -39,6 +39,7 @@
   #include <kernel/thread.h>
   #include <video.h>
   #include <libfdt.h>
  +#include <platform/mt_gpio.h>
  
   #define CMDLINE_OVERFLOW_STR   "[ERROR] CMDLINE overflow"
  
  @@ -61,6 +62,7 @@ static inline void validate_cmdline_boundary(const char *tail, const char *end)
                  panic(CMDLINE_OVERFLOW_STR);
          }
   }
  +
   void bootargs_init(void *fdt)
   {
   #ifdef DEVICE_TREE_SUPPORT
  @@ -108,6 +110,8 @@ void bootargs_init(void *fdt)
          if (temp_ptr != 0)
                  cmdline_tail += snprintf(cmdline_tail, cmdline_end - cmdline_tail, "%s", temp_ptr);
  
  +       cmdline_tail += snprintf(cmdline_tail, CMDLINE_LEN, " androidboot.boardid=%d ", getBoardIDVals());
  +
          bootargs_inited = 1;
   exit:
          if (temp_ptr)
  diff --git a/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/mt_gpio.c b/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/mt_gpio.c
  index 92646973340..6574c2d28d1 100644
  --- a/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/mt_gpio.c
  +++ b/vendor/mediatek/proprietary/bootable/bootloader/lk/platform/mt6765/mt_gpio.c
  @@ -979,6 +979,25 @@ S32 mt_get_gpio_value(int gpio)
          return value_down | (value_up << 0x01);
   }
  
  +u32 getBoardIDVals(void)
  +{
  +       u32 i = 0;
  +       u32 ret = 0;
  +       u32 pins[8] = {GPIO16, GPIO15, GPIO14, GPIO13, GPIO18, GPIO17, GPIO20, GPIO19};
  +       u32 gpio = 0;
  +
  +       for(i = 0; i < 8; i++) {
  +               gpio = pins[i] | 0x80000000;
  +               ret <<= 1;
  +               mt_set_gpio_mode(gpio, GPIO_MODE_00);
  +               mt_set_gpio_dir(gpio, GPIO_DIR_IN);
  +               mt_set_gpio_pull_enable(gpio, GPIO_PULL_DISABLE);
  +               ret |= (mt_get_gpio_in(gpio) & 0x01);
  +       }
  +
  +       return ret;
  +}
  +
   /*****************************************************************************/
   /* sysfs operation                                                           */
   /*****************************************************************************/
  ```
* source build/envsetup.sh
* lunch full_k62v1_64_bsp-eng
* make 2>&1 | tee build-log.txt
* cat /proc/cmdline
  ```
  console=tty0 console=ttyS0,921600n1 vmalloc=400M slub_debug=OFZPU page_owner=on swiotlb=noforce androidboot.hardware=mt6765 maxcpus=8 loop.max_part=7 firmware_class.path=/vendor/firmware  earlycon=uart8250,mmio32,0x11002000, has_battery_removed=1 androidboot.boot_devices=bootdevice,11230000.mmc root=/dev/ram androidboot.vbmeta.device=PARTUUID=a4da8f1b-fe07-433b-95cb-84a5f23e477b androidboot.vbmeta.avb_version=1.1 androidboot.vbmeta.device_state=locked androidboot.veritymode=disabled androidboot.veritymode.managed=yes androidboot.verifiedbootstate=green androidboot.boardid=0  bootopt=64S3,32N2,64N2 buildvariant=eng androidboot.atm=disabled androidboot.meta_log_disable=0 printk.disable_uart=0 ddebug_query="file *mediatek* +p ; file *gpu* =_" bootprof.pl_t=1132 bootprof.lk_t=3431 bootprof.logo_t=1160 androidboot.serialno=0123456789ABCDEF androidboot.bootreason=PowerKey gpt=1 initcall_debug=1 usb2jtag_mode=0 mrdump_ddrsv=yes mrdump_cb=0x10e800,0x1400 mrdump.lk=MRDUMP08 androidboot.dtb_idx=0 androidboot.dtbo_idx=0
  ```
* getprop ro.boot.boardid
  ```
  0
  ```

# 内核驱动解析

```C
static int get_board_version(void)
{
	char boot[3] = {'\0'};
	int ret = 0;
	char *match = (char *) strnstr(saved_command_line,
				"androidboot.hwid=",
				strlen(saved_command_line));
	if (match) {
		memcpy(boot, (match + strlen("androidboot.hwid=")),
			sizeof(boot) - 1);
		printk("%s: hwid is %s\n", __func__, boot);
		if (!strncmp(boot, "P1", strlen("P1")))
			ret = 1;
		else if (!strncmp(boot, "P2", strlen("P2")))
			ret = 2;
		else if (!strncmp(boot, "P3", strlen("P3")))
			ret = 3;
		else
			ret = 0;
	}
	return ret;
}
```
