# LXC Network

理解LXC创建虚拟网卡流程

# LXC创建网卡流程

* 生成veth对：veth1/veth2；
* 使用配置中的bridge设置host端的网卡veth1；
* 将veth2转移到guest；

```
* https://github.com/lxc/lxc/blob/stable-3.0/src/lxc/start.c#L1592
  └── static int lxc_spawn(struct lxc_handler *handler)
      ├── if (handler->ns_clone_flags & CLONE_NEWNET)
      │   ├── ret = lxc_find_gateway_addresses(handler);
      │   └── ret = lxc_create_network_priv(handler);
      │       └── lxc_list_for_each(iterator, network)
      │           └── netdev_conf[netdev->type](handler, netdev)
      │               └── static  instantiate_cb netdev_conf[LXC_NET_MAXCONFTYPE + 1]
      │                   └── [LXC_NET_VETH]    = instantiate_veth,
      │                       └── static int instantiate_veth(struct lxc_handler *handler, struct lxc_netdev *netdev)
      │                           ├── err = lxc_veth_create(veth1, veth2);
      │                           │   ├── err = netlink_open(&nlh, NETLINK_ROUTE);
      │                           │   ├── err = netlink_transaction(&nlh, nlmsg, answer);
      │                           │   └── netlink_close(&nlh);
      │                           ├── err = lxc_bridge_attach(netdev->link, veth1);
      │                           │   └── xc.net.[i].link, name of bridge or host iface to attach if any            <-- bridge是在配置中指定的
      │                           └── err = lxc_netdev_up(veth1);
      │                               └── return netdev_set_flag(name, IFF_UP);
      │                                   ├── err = netlink_open(&nlh, NETLINK_ROUTE);
      │                                   ├── err = netlink_transaction(&nlh, nlmsg, answer);
      │                                   └── netlink_close(&nlh);
      ├── if (handler->ns_clone_flags & CLONE_NEWNET)
      │   ├── ret = lxc_network_move_created_netdev_priv(handler->lxcpath, handler->name, &conf->network, handler->pid);
      │   │   └── ret = lxc_netdev_move_by_name(ifname, pid, NULL);
      │   │       └── return lxc_netdev_move_by_index(index, pid, newname);
      │   │           ├── err = netlink_open(&nlh, NETLINK_ROUTE);
      │   │           ├── err = netlink_transaction(&nlh, nlmsg, nlmsg);
      │   │           └── netlink_close(&nlh);
      │   └── ret = lxc_create_network_unpriv(handler->lxcpath, handler->name, &conf->network, handler->pid, conf->hooks_version);
      │       └── lxc_list_for_each(iterator, network)
      │           └── lxc_create_network_unpriv_exec(lxcpath, lxcname, netdev, pid, hooks_version)
      └── ret = lxc_network_send_veth_names_to_child(handler);
```
